name: Micromamba static builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  conda-build:
    name: "micromamba - ${{ matrix.platform }}-${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, platform: linux, arch: 64 }
          - { os: ubuntu-latest, platform: linux, arch: aarch64 }
          - { os: ubuntu-latest, platform: linux, arch: ppc64le }
          - { os: macos-latest, platform: osx, arch: 64 }
          - { os: macos-latest, platform: osx, arch: arm64 }
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Checkout micromamba-feedstock
        uses: actions/checkout@v3
        with:
          repository: conda-forge/micromamba-feedstock
          path: micromamba-feedstock
      # replace the url: ... until the libmamba.patch line with git_url: ../..
      - name: Patch micromamba-feedstock
        run: |
          cp ./micromamba/recipe/* micromamba-feedstock/recipe/
      - uses: mamba-org/provision-with-micromamba@main
        with:
          channels: conda-forge
          environment-file: false
          environment-name: mambabuild
          extra-specs: boa
      - name: Build conda package
        shell: bash -l {0}
        run: |
          conda mambabuild -m micromamba-feedstock/.ci_support/${{ matrix.platform }}_${{ matrix.arch }}_.yaml \
                              micromamba-feedstock/recipe ${{ matrix.arch != '64' && '--no-test' || '' }}
      - name: Unpack micromamba package
        shell: bash -l {0}
        run: |
          cd $MAMBA_ROOT_PREFIX/envs/mambabuild/conda-bld/${{ matrix.platform }}-${{ matrix.arch }}
          tar -xvf micromamba-*.tar.bz2
          mkdir -p ${{ github.workspace }}/artifacts
          cp bin/micromamba ${{ github.workspace }}/artifacts
      - name: Test micromamba on emulated target architecture
        if: ${{ matrix.arch != '64' && matrix.platform == 'linux' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu_latest
          dockerRunArgs: |
            -v "${{ github.workspace }}/artifacts:/artifacts"
          run: |
            cd /artifacts
            ./micromamba --version
            ./micromamba --help
            ./micromamba
            apt update && apt install -y ca-certificates
            ./micromamba create -p /tmp/testenv --override-channels -c conda-forge --yes python=3.9
      - name: Archive conda-build artifact
        if: failure()
        run: tar -czf ${{ github.workspace }}/micromamba-conda-build-failed-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz $MAMBA_ROOT_PREFIX/envs/mambabuild/conda-bld/micromamba_*
      - name: Upload conda build artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: micromamba-conda-build-failed-${{ matrix.platform }}-${{ matrix.arch }}
          path: ${{ github.workspace }}/micromamba-conda-build-failed-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
          retention-days: 7
      - name: Upload micromamba
        uses: actions/upload-artifact@v3
        with:
          name: micromamba-${{ matrix.platform }}-${{ matrix.arch }}
          path: ${{ github.workspace }}/artifacts/micromamba

  micromamba_full_static_win:
    # These build instructions are based on https://github.com/conda-forge/micromamba-feedstock
    name: "micromamba - win-64"
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: create build environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ./libmamba/environment-static-dev-win.yml
          environment-name: build_env
          cache-env: true  # this also caches the vcpkg builds
      - name: fix up vcpkg recipes
        shell: python
        run: |
          # See https://github.com/microsoft/vcpkg/pull/30546

          import os
          from pathlib import Path

          vcpkg_root = Path(os.environ["MAMBA_ROOT_PREFIX"]) / "envs" / "build_env" / "Library" / "share" / "vcpkg"
          f = vcpkg_root / "scripts" / "cmake" / "vcpkg_acquire_msys.cmake"

          text = f.read_text()

          text = text.replace("fdd86f4ffa6e274d6fef1676a4987971b1f2e1ec556eee947adcb4240dc562180afc4914c2bdecba284012967d3d3cf4d1a392f798a3b32a3668d6678a86e8d3", "fbdcf2572d242b14ef3b39f29a6119ee58705bad651c9da48ffd11e80637e8d767d20ed5d562f67d92eecd01f7fc3bc351af9d4f84fb9b321d2a9aff858b3619")

          text = text.replace("https://repo.msys2.org/msys/x86_64/msys2-runtime-3.2.0-8-x86_64.pkg.tar.zst", "https://repo.msys2.org/msys/x86_64/msys2-runtime-3.4.6-1-x86_64.pkg.tar.zst")

          text = text.replace("b309799e5a9d248ef66eaf11a0bd21bf4e8b9bd5c677c627ec83fa760ce9f0b54ddf1b62cbb436e641fbbde71e3b61cb71ff541d866f8ca7717a3a0dbeb00ebf", "a202ddaefa93d8a4b15431dc514e3a6200c47275c5a0027c09cc32b28bc079b1b9a93d5ef65adafdc9aba5f76a42f3303b1492106ddf72e67f1801ebfe6d02cc")

          text = text.replace("https://repo.msys2.org/msys/x86_64/libtool-2.4.6-9-x86_64.pkg.tar.xz", "https://repo.msys2.org/msys/x86_64/libtool-2.4.7-3-x86_64.pkg.tar.zst")

          f.write_text(text)
      - name: build static windows dependencies with vcpkg
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          mkdir build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          git clone https://github.com/conda-forge/micromamba-feedstock.git
          if %errorlevel% neq 0 exit /b %errorlevel%
          ROBOCOPY micromamba-feedstock/recipe/libsolv %VCPKG_ROOT%/ports/libsolv
          @rem ROBOCOPY has 0 and 1 as successfull exit codes
          if %errorlevel% neq 0 if %errorlevel% neq 1 exit /b %errorlevel%
          SET VCPKG_BUILD_TYPE=release && vcpkg install libsolv[conda] --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install "libarchive[bzip2,lz4,lzma,lzo,openssl,zstd]" --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install curl --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install yaml-cpp --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install reproc --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          set CMAKE_PREFIX_PATH=%VCPKG_ROOT%\installed\x64-windows-static\;%CMAKE_PREFIX_PATH%
          if %errorlevel% neq 0 exit /b %errorlevel%
      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-windows-2019
      - name: build micromamba
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cmake .. ^
              -D CMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% ^
              -D CMAKE_PREFIX_PATH="%VCPKG_ROOT%\installed\x64-windows-static;%CMAKE_PREFIX_PATH%" ^
              -D CMAKE_CXX_COMPILER_LAUNCHER=sccache ^
              -D CMAKE_C_COMPILER_LAUNCHER=sccache ^
              -D CMAKE_BUILD_TYPE="Release" ^
              -D BUILD_LIBMAMBA=ON ^
              -D BUILD_STATIC=ON ^
              -D BUILD_MICROMAMBA=ON ^
              -G "Ninja"
          if %errorlevel% neq 0 exit /b %errorlevel%
          ninja install
          if %errorlevel% neq 0 exit /b %errorlevel%
          sccache --show-stats
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --version
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --help
          if %errorlevel% neq 0 exit /b %errorlevel%
      - name: build cache statistics
        run: sccache --show-stats
      - name: Archive conda-build artifact
        if: failure()
        run: tar -czf ${{ github.workspace }}/micromamba-conda-build-failed-win-64.tar.gz ${{ github.workspace }}/build/
      - name: Upload conda build artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: micromamba-conda-build-failed-win-64
          path: ${{ github.workspace }}/micromamba-conda-build-failed-win-64.tar.gz
          retention-days: 7
      - uses: actions/upload-artifact@v3
        with:
          name: micromamba-win-64
          path: build/micromamba/micromamba.exe
