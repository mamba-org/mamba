name: Micromamba static builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux-conda-build:
    name: "micromamba - ${{ matrix.TARGET }}"
    runs-on: ubuntu-latest
    env:
      CI: True
      CONDA_BUILD_YML: ${{ matrix.CONDA_BUILD_YML }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { CONDA_BUILD_YML: linux_64_, TARGET: linux-64 }
          - { CONDA_BUILD_YML: linux_aarch64_, TARGET: linux-aarch64 }
          - { CONDA_BUILD_YML: linux_ppc64le_, TARGET: linux-ppc64le }
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Checkout micromamba-feedstock
        uses: actions/checkout@v3
        with:
          repository: conda-forge/micromamba-feedstock
          path: micromamba-feedstock
      - name: Patch micromamba-feedstock
        run: |
          sed -i -E ':a; N; $!ba; s/url:.*libmamba.patch/git_url: ..\/..\//g' micromamba-feedstock/recipe/meta.yaml
      - uses: mamba-org/provision-with-micromamba@main
        with:
          channels: conda-forge
          environment-file: false
          environment-name: mambabuild
          extra-specs: boa
      - name: Build conda package
        shell: bash -l {0}
        run: conda mambabuild -m micromamba-feedstock/.ci_support/${{ matrix.CONDA_BUILD_YML }}.yaml micromamba-feedstock/recipe ${{ matrix.TARGET != 'linux-64' && '--no-test' || '' }}
      - name: Unpack micromamba package
        shell: bash -l {0}
        run: |
          cd $MAMBA_ROOT_PREFIX/envs/mambabuild/conda-bld/${{ matrix.TARGET }}
          tar -xvf micromamba-*.tar.bz2
          chmod +x bin/micromamba
      - name: Upload micromamba
        uses: actions/upload-artifact@v2
        with:
          name: micromamba-${{ matrix.TARGET }}
          path: ~/micromamba-root/envs/mambabuild/conda-bld/${{ matrix.TARGET }}/bin/micromamba

  macos-conda-build:
    name: "micromamba - ${{ matrix.TARGET }}"
    runs-on: macos-latest
    env:
      CI: True
      CONDA_BUILD_YML: ${{ matrix.CONDA_BUILD_YML }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { CONDA_BUILD_YML: osx_64_, TARGET: osx-64 }
          - { CONDA_BUILD_YML: osx_arm64_, TARGET: osx-arm64 }
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Checkout micromamba-feedstock
        uses: actions/checkout@v3
        with:
          repository: conda-forge/micromamba-feedstock
          path: micromamba-feedstock
      - name: Patch micromamba-feedstock
        run: |
          sed -i '' -E 's/url:.*/git_url: ..\/..\//' micromamba-feedstock/recipe/meta.yaml
          sed -i '' '/sha256:/d' micromamba-feedstock/recipe/meta.yaml
          sed -i '' '/patches:/d' micromamba-feedstock/recipe/meta.yaml
          sed -i '' '/libmamba.patch/d' micromamba-feedstock/recipe/meta.yaml
      - uses: mamba-org/provision-with-micromamba@main
        with:
          channels: conda-forge
          environment-file: false
          environment-name: mambabuild
          extra-specs: boa
      - name: Build conda package
        shell: bash -l {0}
        run: conda mambabuild -m micromamba-feedstock/.ci_support/${{ matrix.CONDA_BUILD_YML }}.yaml micromamba-feedstock/recipe ${{ matrix.TARGET != 'osx-64' && '--no-test' || '' }}
      - name: Unpack micromamba package
        shell: bash -l {0}
        run: |
          cd $MAMBA_ROOT_PREFIX/envs/mambabuild/conda-bld/${{ matrix.TARGET }}
          tar -xvf micromamba-*.tar.bz2
          chmod +x bin/micromamba
      - name: Upload micromamba
        uses: actions/upload-artifact@v2
        with:
          name: micromamba-${{ matrix.TARGET }}
          path: ~/micromamba-root/envs/mambabuild/conda-bld/${{ matrix.TARGET }}/bin/micromamba

  micromamba_full_static_win:
    # These build instructions are based on https://github.com/conda-forge/micromamba-feedstock
    name: "micromamba - win-64"
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: create build environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ./libmamba/environment-static-dev-win.yml
          environment-name: build_env
          cache-env: true  # this also caches the vcpkg builds
      - name: build static windows dependencies with vcpkg
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          mkdir build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          git clone https://github.com/conda-forge/micromamba-feedstock.git
          if %errorlevel% neq 0 exit /b %errorlevel%
          ROBOCOPY micromamba-feedstock/recipe/libsolv %VCPKG_ROOT%/ports/libsolv
          @rem ROBOCOPY has 0 and 1 as successfull exit codes
          if %errorlevel% neq 0 if %errorlevel% neq 1 exit /b %errorlevel%
          SET VCPKG_BUILD_TYPE=release && vcpkg install libsolv[conda] --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install "libarchive[bzip2,lz4,lzma,lzo,openssl,zstd]" --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install curl --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install yaml-cpp --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install reproc --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          set CMAKE_PREFIX_PATH=%VCPKG_ROOT%\installed\x64-windows-static\;%CMAKE_PREFIX_PATH%
          if %errorlevel% neq 0 exit /b %errorlevel%
      - name: Apply libmamba.patch
        run: |
          cd libmamba
          patch < ../build/micromamba-feedstock/recipe/libmamba.patch
        shell: bash
      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-windows-2019
      - name: build micromamba
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cmake .. ^
              -D CMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% ^
              -D CMAKE_PREFIX_PATH="%VCPKG_ROOT%\installed\x64-windows-static;%CMAKE_PREFIX_PATH%" ^
              -D CMAKE_BUILD_TYPE="Release" ^
              -D BUILD_LIBMAMBA=ON ^
              -D BUILD_STATIC_DEPS=ON ^
              -D BUILD_MICROMAMBA=ON ^
              -D MICROMAMBA_LINKAGE=FULL_STATIC ^
              -G "Ninja"
          if %errorlevel% neq 0 exit /b %errorlevel%
          ninja install
          if %errorlevel% neq 0 exit /b %errorlevel%
          sccache --show-stats
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --version
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --help
          if %errorlevel% neq 0 exit /b %errorlevel%
      - uses: actions/upload-artifact@v3
        with:
          name: micromamba-win-64
          path: build/micromamba/micromamba.exe
