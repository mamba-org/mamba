name: Fully static binary builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  micromamba_full_static:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: create build environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ./micromamba/environment-dev.yml
          environment-name: build_env
          cache-env: true
      - name: create build environment
        run: micromamba install -y -n build_env -f ./libmamba/environment-static-dev.yml
      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-${{ matrix.os }}
      - name: build micromamba
        shell: bash -l {0}
        run: |
          micromamba activate build_env
          mkdir build
          cd build
          cmake .. -DBUILD_LIBMAMBA=ON \
                   -DBUILD_STATIC_DEPS=ON \
                   -DBUILD_STATIC=ON \
                   -DBUILD_MICROMAMBA=ON \
                   -DMICROMAMBA_STATIC_DEPS=ON \
                   -DMICROMAMBA_LINKAGE=FULL_STATIC \
                   -DCMAKE_CXX_COMPILER_LAUNCHER=sccache \
                   -DCMAKE_C_COMPILER_LAUNCHER=sccache \
                   -GNinja
          ninja
      - name: check that micromamba runs
        shell: bash -l {0}
        run: |
          micromamba activate build_env
          build/micromamba/micromamba --version
      - name: build cache statistics
        run: sccache --show-stats
      - uses: actions/upload-artifact@v3
        with:
          name: Fully static binary (${{ matrix.os }})
          path: build/micromamba/micromamba

  micromamba_full_static_win:
    # Don't run this job branches because it is very slow
    if: github.ref == 'refs/heads/main'

    # These build instructions are based on https://github.com/conda-forge/micromamba-feedstock
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: create build environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ./libmamba/environment-static-dev-win.yml
          environment-name: build_env
          cache-env: true  # this also caches the vcpkg builds
      - name: build static windows dependencies with vcpkg
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          mkdir build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          git clone https://github.com/conda-forge/micromamba-feedstock.git
          if %errorlevel% neq 0 exit /b %errorlevel%
          ROBOCOPY micromamba-feedstock/recipe/libsolv %VCPKG_ROOT%/ports/libsolv
          @rem ROBOCOPY has 0 and 1 as successfull exit codes
          if %errorlevel% neq 0 if %errorlevel% neq 1 exit /b %errorlevel%
          SET VCPKG_BUILD_TYPE=release && vcpkg install libsolv[conda] --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install "libarchive[bzip2,lz4,lzma,lzo,openssl,zstd]" --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install curl --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install yaml-cpp --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          vcpkg install reproc --triplet x64-windows-static
          if %errorlevel% neq 0 exit /b %errorlevel%
          set CMAKE_PREFIX_PATH=%VCPKG_ROOT%\installed\x64-windows-static\;%CMAKE_PREFIX_PATH%
          if %errorlevel% neq 0 exit /b %errorlevel%
      - name: Apply libmamba.patch
        run: |
          cd libmamba
          patch < ../build/micromamba-feedstock/recipe/libmamba.patch
        shell: bash
      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-windows-2019
      - name: build micromamba
        shell: cmd /C CALL {0}
        run: |
          call micromamba activate build_env
          if %errorlevel% neq 0 exit /b %errorlevel%
          cd build
          if %errorlevel% neq 0 exit /b %errorlevel%
          cmake .. ^
              -D CMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% ^
              -D CMAKE_PREFIX_PATH="%VCPKG_ROOT%\installed\x64-windows-static;%CMAKE_PREFIX_PATH%" ^
              -D CMAKE_BUILD_TYPE="Release" ^
              -D BUILD_LIBMAMBA=ON ^
              -D BUILD_STATIC_DEPS=ON ^
              -D BUILD_MICROMAMBA=ON ^
              -D MICROMAMBA_LINKAGE=FULL_STATIC ^
              -G "Ninja"
          if %errorlevel% neq 0 exit /b %errorlevel%
          ninja install
          if %errorlevel% neq 0 exit /b %errorlevel%
          sccache --show-stats
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --version
          if %errorlevel% neq 0 exit /b %errorlevel%
          .\micromamba\micromamba.exe --help
          if %errorlevel% neq 0 exit /b %errorlevel%
      - uses: actions/upload-artifact@v3
        with:
          name: Fully static binary (windows-2019)
          path: build/micromamba/micromamba.exe
